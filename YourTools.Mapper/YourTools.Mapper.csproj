<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <OutputItemType>Analyzer</OutputItemType>
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <VersionPrefix>1.0.2</VersionPrefix>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <PackageId>YourTools.Mapper</PackageId>
        <Authors>Younes Baghaei Moghaddam</Authors>
        <Description>Source generator for mapping objects in .NET projects.</Description>
        <PackageTags>mapping, source-generator, roslyn</PackageTags>
        <RepositoryUrl>https://github.com/</RepositoryUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageProjectUrl>https://yourtools.example.com</PackageProjectUrl>
        <PackageReadmeFile>README.md</PackageReadmeFile>

        <!-- SOURCE GENERATOR IMPORTANT SETTINGS -->
        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>
        <LangVersion>latest</LangVersion>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.0.1" PrivateAssets="all" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
    </ItemGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="README.md" Pack="true" PackagePath="" />
    </ItemGroup>

</Project>
